{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\Web Development Projects\\\\codeshop\\\\frontend\\\\src\\\\screens\\\\RegistrationScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Card, Col, Form, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\n\nfunction RegistrationScreen({\n  login\n}) {\n  _s();\n\n  const [username, setUsername] = useState('');\n\n  let printData = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n  async function SignUp(e) {\n    e.preventDefault();\n    let publicKey = '';\n    let balance = '';\n    const requestOptions = {\n      crossDomain: true,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username\n      })\n    };\n    const response = await fetch('http://localhost:5000/signup', requestOptions);\n    const data = await response.json();\n    publicKey = data.publicKey;\n    balance = data.balance;\n    login(username, publicKey, balance);\n    printData = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Username: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Public Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Private Key:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [printData, /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicKey\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Public Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          size: \"lg\",\n          type: \"text\",\n          placeholder: \"Enter name\",\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => {\n          SignUp(e);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegistrationScreen, \"AfRD6VxGv+Gn/ZNWvgmLk5f6638=\");\n\n_c = RegistrationScreen;\nexport default RegistrationScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationScreen\");","map":{"version":3,"sources":["F:/Web Development Projects/codeshop/frontend/src/screens/RegistrationScreen.js"],"names":["React","useState","Button","Card","Col","Form","ListGroup","ListGroupItem","Row","RegistrationScreen","login","username","setUsername","printData","SignUp","e","preventDefault","publicKey","balance","requestOptions","crossDomain","method","headers","body","JSON","stringify","response","fetch","data","json","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACIC,MADJ,EAEIC,IAFJ,EAGIC,GAHJ,EAIIC,IAJJ,EAKIC,SALJ,EAMIC,aANJ,EAOIC,GAPJ,QAQO,iBARP;;AAUA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAuC;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;;AACA,MAAIY,SAAS,gBAAG,qCAAhB;;AACA,iBAAeC,MAAf,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,OAAO,GAAG,EAAd;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,WAAW,EAAE,IADM;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHU;AAInBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEd,QAAAA,QAAQ,EAAEA;AAAZ,OAAf;AAJa,KAAvB;AAMA,UAAMe,QAAQ,GAAG,MAAMC,KAAK,CACxB,8BADwB,EAExBR,cAFwB,CAA5B;AAIA,UAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAZ,IAAAA,SAAS,GAAGW,IAAI,CAACX,SAAjB;AACAC,IAAAA,OAAO,GAAGU,IAAI,CAACV,OAAf;AAEAR,IAAAA,KAAK,CAACC,QAAD,EAAWM,SAAX,EAAsBC,OAAtB,CAAL;AAEAL,IAAAA,SAAS,gBACL;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAAA,gCACI,QAAC,SAAD,CAAW,IAAX;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,SAAD,CAAW,IAAX;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI,QAAC,SAAD,CAAW,IAAX;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAgBH;;AAED,sBACI;AAAA,eACKA,SADL,eAEI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,IADT;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,WAAW,EAAC,YAHhB;AAII,UAAA,QAAQ,EAAGE,CAAD,IAAO;AACbH,YAAAA,WAAW,CAACG,CAAC,CAACe,MAAF,CAASC,KAAV,CAAX;AACH;AANL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAGhB,CAAD,IAAO;AACZD,UAAAA,MAAM,CAACC,CAAD,CAAN;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AA2BH;;GApEQN,kB;;KAAAA,kB;AAsET,eAAeA,kBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Button,\r\n    Card,\r\n    Col,\r\n    Form,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n} from 'react-bootstrap';\r\n\r\nfunction RegistrationScreen({ login }) {\r\n    const [username, setUsername] = useState('');\r\n    let printData = <></>;\r\n    async function SignUp(e) {\r\n        e.preventDefault();\r\n        let publicKey = '';\r\n        let balance = '';\r\n        const requestOptions = {\r\n            crossDomain: true,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ username: username }),\r\n        };\r\n        const response = await fetch(\r\n            'http://localhost:5000/signup',\r\n            requestOptions\r\n        );\r\n        const data = await response.json();\r\n        publicKey = data.publicKey;\r\n        balance = data.balance;\r\n\r\n        login(username, publicKey, balance);\r\n        \r\n        printData = (\r\n            <>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>Username: </h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h3>Public Key:</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <h3>Private Key:</h3>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {printData}\r\n            <Form>\r\n                <Form.Group className='mb-3' controlId='formBasicKey'>\r\n                    <Form.Label>Public Key</Form.Label>\r\n                    <Form.Control\r\n                        size='lg'\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        onChange={(e) => {\r\n                            setUsername(e.target.value);\r\n                        }}\r\n                    />\r\n                </Form.Group>\r\n                <Button\r\n                    variant='primary'\r\n                    type='submit'\r\n                    onClick={(e) => {\r\n                        SignUp(e);\r\n                    }}\r\n                >\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RegistrationScreen;\r\n"]},"metadata":{},"sourceType":"module"}