{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\Web Development Projects\\\\codeshop\\\\frontend\\\\src\\\\screens\\\\AddTokens.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nfunction AddTokens({\n  user,\n  userDataSetter\n}) {\n  _s();\n\n  const [key, setKey] = useState('');\n\n  async function Add(e) {\n    e.preventDefault();\n    const requestOptions = {\n      crossDomain: true,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        publicKey: key,\n        amount: 500\n      })\n    };\n    const response = await fetch('http://localhost:5000/addTokens', requestOptions);\n    const data = await response.json();\n    console.log(data);\n    userDataSetter(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicKey\",\n        children: /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Press the button to add 500 tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => {\n          Add(e);\n        },\n        children: \"Add 500 Tokens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(AddTokens, \"bkC9+q0NlrD384Toxf00P35fq+M=\");\n\n_c = AddTokens;\nexport default AddTokens;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTokens\");","map":{"version":3,"sources":["F:/Web Development Projects/codeshop/frontend/src/screens/AddTokens.js"],"names":["React","useState","Button","Form","AddTokens","user","userDataSetter","key","setKey","Add","e","preventDefault","requestOptions","crossDomain","method","headers","body","JSON","stringify","publicKey","amount","response","fetch","data","json","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAnB,EAA6C;AAAA;;AACzC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA9B;;AACA,iBAAeQ,GAAf,CAAmBC,CAAnB,EAAsB;AAClBA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,WAAW,EAAE,IADM;AAEnBC,MAAAA,MAAM,EAAE,MAFW;AAGnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAHU;AAInBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,SAAS,EAAEZ,GAAb;AAAkBa,QAAAA,MAAM,EAAE;AAA1B,OAAf;AAJa,KAAvB;AAMA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,iCADwB,EAExBV,cAFwB,CAA5B;AAIA,UAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAjB,IAAAA,cAAc,CAACiB,IAAD,CAAd;AACH;;AACD,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,cAAvC;AAAA,+BACI,QAAC,IAAD,CAAM,KAAN;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,SADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,OAAO,EAAGb,CAAD,IAAO;AACZD,UAAAA,GAAG,CAACC,CAAD,CAAH;AACH,SALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAoBH;;GAvCQN,S;;KAAAA,S;AAyCT,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nfunction AddTokens({ user, userDataSetter }) {\r\n    const [key, setKey] = useState('');\r\n    async function Add(e) {\r\n        e.preventDefault();\r\n\r\n        const requestOptions = {\r\n            crossDomain: true,\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ publicKey: key, amount: 500 }),\r\n        };\r\n        const response = await fetch(\r\n            'http://localhost:5000/addTokens',\r\n            requestOptions\r\n        );\r\n        const data = await response.json();\r\n        console.log(data);\r\n        userDataSetter(data);\r\n    }\r\n    return (\r\n        <>\r\n            <Form>\r\n                <Form.Group className='mb-3' controlId='formBasicKey'>\r\n                    <Form.Label>\r\n                        <h3>Press the button to add 500 tokens</h3>\r\n                    </Form.Label>\r\n                </Form.Group>\r\n                <Button\r\n                    variant='primary'\r\n                    type='submit'\r\n                    onClick={(e) => {\r\n                        Add(e);\r\n                    }}\r\n                >\r\n                    Add 500 Tokens\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AddTokens;\r\n"]},"metadata":{},"sourceType":"module"}